@using DevPortal.QueryStack.Model;
@inject UserManager<ApplicationUser> userManager
@inject DevPortal.QueryStack.DevPortalDbContext dbContext
@{
    var applicationUser = await userManager.GetUserAsync(User);
    var activities = dbContext.Activities.Where(c => c.UserName == User.Identity.Name)
        .Take(4)
        .ToArray();

    void GetUrl(Activity activity)
    {
        switch (activity.ContentType)
        {
            //case nameof(Blog):
            //    return Url.Action(nameof(BlogController., "Blog")
            default:
                break;
        }
    }
}
<div class="welcome-cont-out">
    <h1 class="main-head"><span class="light-text">Ahoj,</span> @User.Identity.Name<text>!</text></h1>
    <div class="row">
        <div class="col-md-6 board-right">
            <a avatar-for-user="@User.Identity.Name" class="avatar pull-left"></a>
            <div class="welcome-cont">
                @if (!string.IsNullOrEmpty(applicationUser?.ShortDescription))
                {
                    <p class="mb-1"><b>@applicationUser?.ShortDescription</b></p>
                }
                <a asp-controller="Manage" asp-action="@nameof(ManageController.Index)"
                   class="blue-text mb-0">Vylepši si svoj profil »</a>
            </div>
        </div>
        <div class="col-md-6 res-mt-20">
            <ul class="light-text">
                @foreach (var activity in activities)
                {
                    <li><a href="#">@activity.ContentTitle</a></li>
                }
            </ul>
        </div>
    </div>
</div>